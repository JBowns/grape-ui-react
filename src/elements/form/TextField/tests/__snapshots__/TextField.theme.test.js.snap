// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextField using Theme Font Family should return a TextField object with a custom font family 1`] = `
.c0 {
  position: relative;
  background-color: hsl(0,0%,100%);
  color: inherit;
  padding-bottom: 16px;
  padding-top: 4px;
  width: 100%;
}

.c1 {
  background-color: transparent;
  color: inherit;
  border: 1px solid hsl(0,0%,25%);
  border-radius: 4px;
  border-radius: 4px;
  outline: 0;
  width: 100%;
  padding: 1rem;
  font-family: "DejaVu Sans Mono","Bitstream Vera Sans Mono",Courier;
  font-size: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}

.c1 .grape-ui-select__control,
.c1 .DayPickerInput > input {
  margin: -1rem;
  padding: 1rem;
}

.c1 .grape-ui-select__control + .DayPickerInput-OverlayWrapper,
.c1 .DayPickerInput > input + .DayPickerInput-OverlayWrapper {
  -webkit-transform: translateX(-1rem) translateY(calc(1rem + 2px));
  -ms-transform: translateX(-1rem) translateY(calc(1rem + 2px));
  transform: translateX(-1rem) translateY(calc(1rem + 2px));
}

.c1[disabled] {
  opacity: 0.3;
}

.c1[disabled] ~ * {
  color: rgba(0,0,0,0.3);
}

.c1:focus,
.c1:focus-within {
  border-color: hsl(323.3,84.6%,28%);
  box-shadow: 0 0 0 1px hsl(323.3,84.6%,28%);
}

.c1:focus + label,
.c1:focus-within + label {
  color: hsl(323.3,84.6%,28%);
}

.c1::-webkit-input-placeholder,
.c1 input::-webkit-input-placeholder {
  color: hsl(0,0%,75%);
}

.c1::-moz-placeholder,
.c1 input::-moz-placeholder {
  color: hsl(0,0%,75%);
}

.c1:-ms-input-placeholder,
.c1 input:-ms-input-placeholder {
  color: hsl(0,0%,75%);
}

.c1::placeholder,
.c1 input::placeholder {
  color: hsl(0,0%,75%);
}

.c1 .DayPickerInput > input {
  background: transparent;
  border: 0;
  font: inherit;
  outline: 0;
  width: 100%;
}

<div
  className="c0"
>
  <input
    className="c1"
    id="myButton"
    name="myButton"
    readOnly={false}
    tabIndex="0"
    type="text"
  >
    Lorem Ipsum
  </input>
</div>
`;

exports[`TextField using Theme color should return a TextField object with custom color 1`] = `
.c0 {
  position: relative;
  background-color: hsl(0,0%,100%);
  color: inherit;
  padding-bottom: 16px;
  padding-top: 4px;
  width: 100%;
}

.c1 {
  background-color: hsl(305,33.9%,23.7%);
  color: hsl(313,67.8%,47.5%);
  border: 1px solid hsl(0,0%,25%);
  border-radius: 4px;
  border-radius: 4px;
  outline: 0;
  width: 100%;
  padding: 1rem;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}

.c1 .grape-ui-select__control,
.c1 .DayPickerInput > input {
  margin: -1rem;
  padding: 1rem;
}

.c1 .grape-ui-select__control + .DayPickerInput-OverlayWrapper,
.c1 .DayPickerInput > input + .DayPickerInput-OverlayWrapper {
  -webkit-transform: translateX(-1rem) translateY(calc(1rem + 2px));
  -ms-transform: translateX(-1rem) translateY(calc(1rem + 2px));
  transform: translateX(-1rem) translateY(calc(1rem + 2px));
}

.c1[disabled] {
  opacity: 0.3;
}

.c1[disabled] ~ * {
  color: rgba(0,0,0,0.3);
}

.c1:focus,
.c1:focus-within {
  border-color: hsl(323.3,84.6%,28%);
  box-shadow: 0 0 0 1px hsl(323.3,84.6%,28%);
}

.c1:focus + label,
.c1:focus-within + label {
  color: hsl(323.3,84.6%,28%);
}

.c1::-webkit-input-placeholder,
.c1 input::-webkit-input-placeholder {
  color: hsl(0,0%,75%);
}

.c1::-moz-placeholder,
.c1 input::-moz-placeholder {
  color: hsl(0,0%,75%);
}

.c1:-ms-input-placeholder,
.c1 input:-ms-input-placeholder {
  color: hsl(0,0%,75%);
}

.c1::placeholder,
.c1 input::placeholder {
  color: hsl(0,0%,75%);
}

.c1 .DayPickerInput > input {
  background: transparent;
  border: 0;
  font: inherit;
  outline: 0;
  width: 100%;
}

<div
  className="c0"
>
  <input
    className="c1"
    id="myButton"
    name="myButton"
    readOnly={false}
    tabIndex="0"
    type="text"
  >
    Lorem Ipsum
  </input>
</div>
`;

exports[`TextField using custom brand colors should return a TextField object with custom brand primary color 1`] = `
.c0 {
  position: relative;
  background-color: hsl(0,0%,100%);
  color: inherit;
  padding-bottom: 16px;
  padding-top: 4px;
  width: 100%;
}

.c1 {
  background-color: transparent;
  color: inherit;
  border: 1px solid hsl(0,0%,25%);
  border-radius: 4px;
  border-radius: 4px;
  outline: 0;
  width: 100%;
  padding: 1rem;
  font-family: Nunito,sans-serif;
  font-size: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}

.c1 .grape-ui-select__control,
.c1 .DayPickerInput > input {
  margin: -1rem;
  padding: 1rem;
}

.c1 .grape-ui-select__control + .DayPickerInput-OverlayWrapper,
.c1 .DayPickerInput > input + .DayPickerInput-OverlayWrapper {
  -webkit-transform: translateX(-1rem) translateY(calc(1rem + 2px));
  -ms-transform: translateX(-1rem) translateY(calc(1rem + 2px));
  transform: translateX(-1rem) translateY(calc(1rem + 2px));
}

.c1[disabled] {
  opacity: 0.3;
}

.c1[disabled] ~ * {
  color: rgba(0,0,0,0.3);
}

.c1:focus,
.c1:focus-within {
  border-color: hsl(100,84.6%,28%);
  box-shadow: 0 0 0 1px hsl(100,84.6%,28%);
}

.c1:focus + label,
.c1:focus-within + label {
  color: hsl(100,84.6%,28%);
}

.c1::-webkit-input-placeholder,
.c1 input::-webkit-input-placeholder {
  color: hsl(0,0%,75%);
}

.c1::-moz-placeholder,
.c1 input::-moz-placeholder {
  color: hsl(0,0%,75%);
}

.c1:-ms-input-placeholder,
.c1 input:-ms-input-placeholder {
  color: hsl(0,0%,75%);
}

.c1::placeholder,
.c1 input::placeholder {
  color: hsl(0,0%,75%);
}

.c1 .DayPickerInput > input {
  background: transparent;
  border: 0;
  font: inherit;
  outline: 0;
  width: 100%;
}

<div
  className="c0"
>
  <input
    className="c1"
    id="myButton"
    name="myButton"
    readOnly={false}
    tabIndex="0"
    type="text"
  >
    I should be hsl(100, 84.6%, 28%) on focus and I should be in Nunito
  </input>
</div>
`;
