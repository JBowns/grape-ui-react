// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextField  a large TextFieldComponent object should return a large TextFieldComponent object  1`] = `
.c0 {
  position: relative;
  background-color: white;
}

.c1 {
  position: absolute;
  padding: 0 1rem;
  background-color: white;
  top: -0.5rem;
  left: 1rem;
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}

.c2 {
  font-family: inherit;
  font-size: 1.2rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  border: 1px solid hsl(0,0%,25%);
  border-radius: 8px;
  padding: 1rem;
  outline: 0;
}

.c2:focus {
  border-color: hsl(323.3,84.6%,28%);
  box-shadow: 0 1px 0 0 hsl(323.3,84.6%,28%);
}

<TextField
  assistiveText=""
  controlId="exampleFullName"
  controlLabel="Full name"
  lg={true}
  validationError=""
>
  <ControlGroupBase
    assistiveText=""
    controlId="exampleFullName"
    controlLabel="Full name"
    validationError=""
  >
    <styled.div>
      <div
        className="c0"
      >
        <ControlLabel
          color="inherit"
          fontFamily="inherit"
          fontWeight="inherit"
          htmlFor="exampleFullName"
          kerning="inherit"
          lg={false}
          sm={false}
          textAlign="inherit"
          textDecoration="inherit"
        >
          <styled.label
            htmlFor="exampleFullName"
          >
            <label
              className="c1"
              htmlFor="exampleFullName"
            >
              Full name
            </label>
          </styled.label>
        </ControlLabel>
        <TextFieldComponent
          borderColor="hsl(0, 0%, 25%)"
          borderColorActive="hsl(323.3, 84.6%, 28%)"
          borderRadius="4px"
          color="inherit"
          fontFamily="inherit"
          fontWeight="inherit"
          id="exampleFullName"
          kerning="inherit"
          lg={true}
          padding="1rem"
          sm={false}
          textAlign="inherit"
          textDecoration="inherit"
        >
          <styled.input
            id="exampleFullName"
          >
            <input
              className="c2"
              id="exampleFullName"
              type="text"
            />
          </styled.input>
        </TextFieldComponent>
      </div>
    </styled.div>
  </ControlGroupBase>
</TextField>
`;

exports[`TextField Component base should return a TextField object 1`] = `
.c0 {
  position: relative;
  background-color: white;
}

.c1 {
  position: absolute;
  padding: 0 1rem;
  background-color: white;
  top: -0.5rem;
  left: 1rem;
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}

.c2 {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  border: 1px solid hsl(0,0%,25%);
  border-radius: 4px;
  padding: 1rem;
  outline: 0;
}

.c2:focus {
  border-color: hsl(323.3,84.6%,28%);
  box-shadow: 0 1px 0 0 hsl(323.3,84.6%,28%);
}

<TextField
  assistiveText=""
  controlId="exampleFullName"
  controlLabel="Full name"
  validationError=""
>
  <ControlGroupBase
    assistiveText=""
    controlId="exampleFullName"
    controlLabel="Full name"
    validationError=""
  >
    <styled.div>
      <div
        className="c0"
      >
        <ControlLabel
          color="inherit"
          fontFamily="inherit"
          fontWeight="inherit"
          htmlFor="exampleFullName"
          kerning="inherit"
          lg={false}
          sm={false}
          textAlign="inherit"
          textDecoration="inherit"
        >
          <styled.label
            htmlFor="exampleFullName"
          >
            <label
              className="c1"
              htmlFor="exampleFullName"
            >
              Full name
            </label>
          </styled.label>
        </ControlLabel>
        <TextFieldComponent
          borderColor="hsl(0, 0%, 25%)"
          borderColorActive="hsl(323.3, 84.6%, 28%)"
          borderRadius="4px"
          color="inherit"
          fontFamily="inherit"
          fontWeight="inherit"
          id="exampleFullName"
          kerning="inherit"
          lg={false}
          padding="1rem"
          sm={false}
          textAlign="inherit"
          textDecoration="inherit"
        >
          <styled.input
            id="exampleFullName"
          >
            <input
              className="c2"
              id="exampleFullName"
              type="text"
            />
          </styled.input>
        </TextFieldComponent>
      </div>
    </styled.div>
  </ControlGroupBase>
</TextField>
`;

exports[`TextField a small TextFieldComponent object should return a small TextFieldComponent object  1`] = `
.c0 {
  position: relative;
  background-color: white;
}

.c1 {
  position: absolute;
  padding: 0 1rem;
  background-color: white;
  top: -0.5rem;
  left: 1rem;
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}

.c2 {
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  border: 1px solid hsl(0,0%,25%);
  border-radius: 2px;
  padding: 1rem;
  outline: 0;
}

.c2:focus {
  border-color: hsl(323.3,84.6%,28%);
  box-shadow: 0 1px 0 0 hsl(323.3,84.6%,28%);
}

<TextField
  assistiveText=""
  controlId="exampleFullName"
  controlLabel="Full name"
  sm={true}
  validationError=""
>
  <ControlGroupBase
    assistiveText=""
    controlId="exampleFullName"
    controlLabel="Full name"
    validationError=""
  >
    <styled.div>
      <div
        className="c0"
      >
        <ControlLabel
          color="inherit"
          fontFamily="inherit"
          fontWeight="inherit"
          htmlFor="exampleFullName"
          kerning="inherit"
          lg={false}
          sm={false}
          textAlign="inherit"
          textDecoration="inherit"
        >
          <styled.label
            htmlFor="exampleFullName"
          >
            <label
              className="c1"
              htmlFor="exampleFullName"
            >
              Full name
            </label>
          </styled.label>
        </ControlLabel>
        <TextFieldComponent
          borderColor="hsl(0, 0%, 25%)"
          borderColorActive="hsl(323.3, 84.6%, 28%)"
          borderRadius="4px"
          color="inherit"
          fontFamily="inherit"
          fontWeight="inherit"
          id="exampleFullName"
          kerning="inherit"
          lg={false}
          padding="1rem"
          sm={true}
          textAlign="inherit"
          textDecoration="inherit"
        >
          <styled.input
            id="exampleFullName"
          >
            <input
              className="c2"
              id="exampleFullName"
              type="text"
            />
          </styled.input>
        </TextFieldComponent>
      </div>
    </styled.div>
  </ControlGroupBase>
</TextField>
`;

exports[`TextField with assistive text should return a TextField object contain Assistive Text 1`] = `
.c0 {
  position: relative;
  background-color: white;
}

.c1 {
  position: absolute;
  padding: 0 1rem;
  background-color: white;
  top: -0.5rem;
  left: 1rem;
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}

.c2 {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  border: 1px solid hsl(0,0%,25%);
  border-radius: 4px;
  padding: 1rem;
  outline: 0;
}

.c2:focus {
  border-color: hsl(323.3,84.6%,28%);
  box-shadow: 0 1px 0 0 hsl(323.3,84.6%,28%);
}

.c3 {
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}

<TextField
  assistiveText="Please tell me your name"
  controlId="exampleFullName"
  controlLabel="Full name"
  validationError=""
>
  <ControlGroupBase
    assistiveText="Please tell me your name"
    controlId="exampleFullName"
    controlLabel="Full name"
    validationError=""
  >
    <styled.div>
      <div
        className="c0"
      >
        <ControlLabel
          color="inherit"
          fontFamily="inherit"
          fontWeight="inherit"
          htmlFor="exampleFullName"
          kerning="inherit"
          lg={false}
          sm={false}
          textAlign="inherit"
          textDecoration="inherit"
        >
          <styled.label
            htmlFor="exampleFullName"
          >
            <label
              className="c1"
              htmlFor="exampleFullName"
            >
              Full name
            </label>
          </styled.label>
        </ControlLabel>
        <TextFieldComponent
          borderColor="hsl(0, 0%, 25%)"
          borderColorActive="hsl(323.3, 84.6%, 28%)"
          borderRadius="4px"
          color="inherit"
          fontFamily="inherit"
          fontWeight="inherit"
          id="exampleFullName"
          kerning="inherit"
          lg={false}
          padding="1rem"
          sm={false}
          textAlign="inherit"
          textDecoration="inherit"
        >
          <styled.input
            id="exampleFullName"
          >
            <input
              className="c2"
              id="exampleFullName"
              type="text"
            />
          </styled.input>
        </TextFieldComponent>
        <AssistiveText
          color="inherit"
          fontFamily="inherit"
          fontWeight="inherit"
          id="exampleFullNameHelp"
          kerning="inherit"
          lg={false}
          sm={false}
          textAlign="inherit"
          textDecoration="inherit"
        >
          <styled.div
            id="exampleFullNameHelp"
          >
            <div
              className="c3"
              id="exampleFullNameHelp"
            >
              Please tell me your name
            </div>
          </styled.div>
        </AssistiveText>
      </div>
    </styled.div>
  </ControlGroupBase>
</TextField>
`;

exports[`TextField with some other props should return a TextField object contain input with those other props  1`] = `
.c0 {
  position: relative;
  background-color: white;
}

.c1 {
  position: absolute;
  padding: 0 1rem;
  background-color: white;
  top: -0.5rem;
  left: 1rem;
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}

.c2 {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  border: 1px solid hsl(0,0%,25%);
  border-radius: 4px;
  padding: 1rem;
  outline: 0;
}

.c2:focus {
  border-color: hsl(323.3,84.6%,28%);
  box-shadow: 0 1px 0 0 hsl(323.3,84.6%,28%);
}

<TextField
  assistiveText=""
  controlId="exampleFullName"
  controlLabel="Full name"
  link="abc"
  require={true}
  validationError=""
>
  <ControlGroupBase
    assistiveText=""
    controlId="exampleFullName"
    controlLabel="Full name"
    validationError=""
  >
    <styled.div>
      <div
        className="c0"
      >
        <ControlLabel
          color="inherit"
          fontFamily="inherit"
          fontWeight="inherit"
          htmlFor="exampleFullName"
          kerning="inherit"
          lg={false}
          sm={false}
          textAlign="inherit"
          textDecoration="inherit"
        >
          <styled.label
            htmlFor="exampleFullName"
          >
            <label
              className="c1"
              htmlFor="exampleFullName"
            >
              Full name
            </label>
          </styled.label>
        </ControlLabel>
        <TextFieldComponent
          borderColor="hsl(0, 0%, 25%)"
          borderColorActive="hsl(323.3, 84.6%, 28%)"
          borderRadius="4px"
          color="inherit"
          fontFamily="inherit"
          fontWeight="inherit"
          id="exampleFullName"
          kerning="inherit"
          lg={false}
          link="abc"
          padding="1rem"
          require={true}
          sm={false}
          textAlign="inherit"
          textDecoration="inherit"
        >
          <styled.input
            id="exampleFullName"
            link="abc"
            require={true}
          >
            <input
              className="c2"
              id="exampleFullName"
              type="text"
            />
          </styled.input>
        </TextFieldComponent>
      </div>
    </styled.div>
  </ControlGroupBase>
</TextField>
`;

exports[`TextField with validation error should return a TextField object contain Assistive Text with error style 1`] = `
.c0 {
  position: relative;
  background-color: white;
}

.c1 {
  position: absolute;
  padding: 0 1rem;
  background-color: white;
  top: -0.5rem;
  left: 1rem;
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}

.c2 {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  border: 1px solid hsl(0,0%,25%);
  border-radius: 4px;
  padding: 1rem;
  outline: 0;
}

.c2:focus {
  border-color: hsl(323.3,84.6%,28%);
  box-shadow: 0 1px 0 0 hsl(323.3,84.6%,28%);
}

.c3 {
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: hsl(4.1,89.6%,58.4%);
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}

<TextField
  assistiveText=""
  controlId="exampleFullName"
  controlLabel="Full name"
  validationError="This is a require field."
>
  <ControlGroupBase
    assistiveText=""
    controlId="exampleFullName"
    controlLabel="Full name"
    validationError="This is a require field."
  >
    <styled.div>
      <div
        className="c0"
      >
        <ControlLabel
          color="inherit"
          fontFamily="inherit"
          fontWeight="inherit"
          htmlFor="exampleFullName"
          kerning="inherit"
          lg={false}
          sm={false}
          textAlign="inherit"
          textDecoration="inherit"
        >
          <styled.label
            htmlFor="exampleFullName"
          >
            <label
              className="c1"
              htmlFor="exampleFullName"
            >
              Full name
            </label>
          </styled.label>
        </ControlLabel>
        <TextFieldComponent
          borderColor="hsl(0, 0%, 25%)"
          borderColorActive="hsl(323.3, 84.6%, 28%)"
          borderRadius="4px"
          color="inherit"
          fontFamily="inherit"
          fontWeight="inherit"
          id="exampleFullName"
          kerning="inherit"
          lg={false}
          padding="1rem"
          sm={false}
          textAlign="inherit"
          textDecoration="inherit"
        >
          <styled.input
            id="exampleFullName"
          >
            <input
              className="c2"
              id="exampleFullName"
              type="text"
            />
          </styled.input>
        </TextFieldComponent>
        <AssistiveText
          color="brandDanger"
          fontFamily="inherit"
          fontWeight="inherit"
          id="exampleFullNameError"
          kerning="inherit"
          lg={false}
          sm={false}
          textAlign="inherit"
          textDecoration="inherit"
        >
          <styled.div
            id="exampleFullNameError"
          >
            <div
              className="c3"
              id="exampleFullNameError"
            >
              This is a require field.
            </div>
          </styled.div>
        </AssistiveText>
      </div>
    </styled.div>
  </ControlGroupBase>
</TextField>
`;
