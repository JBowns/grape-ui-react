// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextField  a large TextFieldComponent object should return a large TextFieldComponent object  1`] = `
.c2 {
  background-color: hsl(0,0%,100%);
  color: inherit;
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  left: 0.5rem;
  padding: 0 0.5rem;
  position: absolute;
  top: -0.5rem;
}

.c0 {
  position: relative;
  background-color: hsl(0,0%,100%);
  padding-bottom: 16px;
  padding-top: 4px;
  width: 100%;
}

.c1 {
  font-family: inherit;
  font-size: 1.2rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  border: 1px solid hsl(0,0%,25%);
  border-radius: 8px;
  padding: 1rem;
  outline: 0;
  width: 100%;
}

.c1:focus {
  border-color: hsl(323.3,84.6%,28%);
  box-shadow: 0 0 0 1px hsl(323.3,84.6%,28%);
}

.c1:focus + label {
  color: hsl(323.3,84.6%,28%);
}

.c1[required] + label:after {
  content: "*";
}

.c1[disabled] {
  opacity: 0.3;
}

.c1[disabled] ~ * {
  color: rgba(0,0,0,0.3);
}

.c1::-webkit-input-placeholder {
  color: hsl(0,0%,75%);
}

.c1::-moz-placeholder {
  color: hsl(0,0%,75%);
}

.c1:-ms-input-placeholder {
  color: hsl(0,0%,75%);
}

.c1::placeholder {
  color: hsl(0,0%,75%);
}

<div
  className="c0"
>
  <input
    className="c1"
    id="exampleFullName"
    readOnly={false}
    required={false}
    tabIndex="0"
    type="text"
  />
  <label
    className="c2"
    htmlFor="exampleFullName"
  >
    Full name
  </label>
</div>
`;

exports[`TextField Component base should return a TextField object 1`] = `
.c2 {
  background-color: hsl(0,0%,100%);
  color: inherit;
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  left: 0.5rem;
  padding: 0 0.5rem;
  position: absolute;
  top: -0.5rem;
}

.c0 {
  position: relative;
  background-color: hsl(0,0%,100%);
  padding-bottom: 16px;
  padding-top: 4px;
  width: 100%;
}

.c1 {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  border: 1px solid hsl(0,0%,25%);
  border-radius: 4px;
  padding: 1rem;
  outline: 0;
  width: 100%;
}

.c1:focus {
  border-color: hsl(323.3,84.6%,28%);
  box-shadow: 0 0 0 1px hsl(323.3,84.6%,28%);
}

.c1:focus + label {
  color: hsl(323.3,84.6%,28%);
}

.c1[required] + label:after {
  content: "*";
}

.c1[disabled] {
  opacity: 0.3;
}

.c1[disabled] ~ * {
  color: rgba(0,0,0,0.3);
}

.c1::-webkit-input-placeholder {
  color: hsl(0,0%,75%);
}

.c1::-moz-placeholder {
  color: hsl(0,0%,75%);
}

.c1:-ms-input-placeholder {
  color: hsl(0,0%,75%);
}

.c1::placeholder {
  color: hsl(0,0%,75%);
}

<div
  className="c0"
>
  <input
    className="c1"
    id="exampleFullName"
    readOnly={false}
    required={false}
    tabIndex="0"
    type="text"
  />
  <label
    className="c2"
    htmlFor="exampleFullName"
  >
    Full name
  </label>
</div>
`;

exports[`TextField a TextFieldComponent object should return a TextFieldComponent object with a red bgColor  1`] = `
.c2 {
  background-color: hsl(4.1,89.6%,58.4%);
  color: inherit;
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  left: 0.5rem;
  padding: 0 0.5rem;
  position: absolute;
  top: -0.5rem;
}

.c0 {
  position: relative;
  background-color: hsl(4.1,89.6%,58.4%);
  padding-bottom: 16px;
  padding-top: 4px;
  width: 100%;
}

.c1 {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  border: 1px solid hsl(0,0%,25%);
  border-radius: 4px;
  padding: 1rem;
  outline: 0;
  width: 100%;
}

.c1:focus {
  border-color: hsl(323.3,84.6%,28%);
  box-shadow: 0 0 0 1px hsl(323.3,84.6%,28%);
}

.c1:focus + label {
  color: hsl(323.3,84.6%,28%);
}

.c1[required] + label:after {
  content: "*";
}

.c1[disabled] {
  opacity: 0.3;
}

.c1[disabled] ~ * {
  color: rgba(0,0,0,0.3);
}

.c1::-webkit-input-placeholder {
  color: hsl(0,0%,75%);
}

.c1::-moz-placeholder {
  color: hsl(0,0%,75%);
}

.c1:-ms-input-placeholder {
  color: hsl(0,0%,75%);
}

.c1::placeholder {
  color: hsl(0,0%,75%);
}

<div
  className="c0"
>
  <input
    className="c1"
    id="exampleFullName2"
    readOnly={false}
    required={false}
    tabIndex="0"
    type="text"
  />
  <label
    className="c2"
    htmlFor="exampleFullName2"
  >
    Full name2
  </label>
</div>
`;

exports[`TextField a plainText TextFieldComponent should return a disabled TextFieldComponent 1`] = `
.c2 {
  background-color: hsl(0,0%,100%);
  color: inherit;
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  left: 0.5rem;
  padding: 0 0.5rem;
  position: absolute;
  top: -0.5rem;
}

.c0 {
  position: relative;
  background-color: hsl(0,0%,100%);
  padding-bottom: 16px;
  padding-top: 4px;
  width: 100%;
}

.c1 {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  border: 0;
  display: block;
  outline: 0;
  padding: 1rem;
}

<div
  className="c0"
>
  <input
    className="c1"
    id="exampleFullName2"
    readOnly={true}
    required={false}
    tabIndex="-1"
    type="text"
  />
  <label
    className="c2"
    htmlFor="exampleFullName2"
  >
    Full name2
  </label>
</div>
`;

exports[`TextField a small TextFieldComponent object should return a disabled TextFieldComponent 1`] = `
.c2 {
  background-color: hsl(0,0%,100%);
  color: inherit;
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  left: 0.5rem;
  padding: 0 0.5rem;
  position: absolute;
  top: -0.5rem;
}

.c0 {
  position: relative;
  background-color: hsl(0,0%,100%);
  padding-bottom: 16px;
  padding-top: 4px;
  width: 100%;
}

.c1 {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  border: 1px solid hsl(0,0%,25%);
  border-radius: 4px;
  padding: 1rem;
  outline: 0;
  width: 100%;
}

.c1:focus {
  border-color: hsl(323.3,84.6%,28%);
  box-shadow: 0 0 0 1px hsl(323.3,84.6%,28%);
}

.c1:focus + label {
  color: hsl(323.3,84.6%,28%);
}

.c1[required] + label:after {
  content: "*";
}

.c1[disabled] {
  opacity: 0.3;
}

.c1[disabled] ~ * {
  color: rgba(0,0,0,0.3);
}

.c1::-webkit-input-placeholder {
  color: hsl(0,0%,75%);
}

.c1::-moz-placeholder {
  color: hsl(0,0%,75%);
}

.c1:-ms-input-placeholder {
  color: hsl(0,0%,75%);
}

.c1::placeholder {
  color: hsl(0,0%,75%);
}

<div
  className="c0"
>
  <input
    className="c1"
    disabled={true}
    id="exampleFullName2"
    readOnly={false}
    required={false}
    tabIndex="0"
    type="text"
  />
  <label
    className="c2"
    htmlFor="exampleFullName2"
  >
    Full name2
  </label>
</div>
`;

exports[`TextField a small TextFieldComponent object should return a small TextFieldComponent object  1`] = `
.c2 {
  background-color: hsl(0,0%,100%);
  color: inherit;
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  left: 0.5rem;
  padding: 0 0.5rem;
  position: absolute;
  top: -0.5rem;
}

.c0 {
  position: relative;
  background-color: hsl(0,0%,100%);
  padding-bottom: 16px;
  padding-top: 4px;
  width: 100%;
}

.c1 {
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  border: 1px solid hsl(0,0%,25%);
  border-radius: 2px;
  padding: 1rem;
  outline: 0;
  width: 100%;
}

.c1:focus {
  border-color: hsl(323.3,84.6%,28%);
  box-shadow: 0 0 0 1px hsl(323.3,84.6%,28%);
}

.c1:focus + label {
  color: hsl(323.3,84.6%,28%);
}

.c1[required] + label:after {
  content: "*";
}

.c1[disabled] {
  opacity: 0.3;
}

.c1[disabled] ~ * {
  color: rgba(0,0,0,0.3);
}

.c1::-webkit-input-placeholder {
  color: hsl(0,0%,75%);
}

.c1::-moz-placeholder {
  color: hsl(0,0%,75%);
}

.c1:-ms-input-placeholder {
  color: hsl(0,0%,75%);
}

.c1::placeholder {
  color: hsl(0,0%,75%);
}

<div
  className="c0"
>
  <input
    className="c1"
    id="exampleFullName"
    readOnly={false}
    required={false}
    tabIndex="0"
    type="text"
  />
  <label
    className="c2"
    htmlFor="exampleFullName"
  >
    Full name
  </label>
</div>
`;

exports[`TextField a small TextFieldComponent object should return a small TextFieldComponent object with a red activeColor  1`] = `
.c2 {
  background-color: hsl(0,0%,100%);
  color: inherit;
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  left: 0.5rem;
  padding: 0 0.5rem;
  position: absolute;
  top: -0.5rem;
}

.c0 {
  position: relative;
  background-color: hsl(0,0%,100%);
  padding-bottom: 16px;
  padding-top: 4px;
  width: 100%;
}

.c1 {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  border: 1px solid hsl(0,0%,25%);
  border-radius: 4px;
  padding: 1rem;
  outline: 0;
  width: 100%;
}

.c1:focus {
  border-color: hsl(323.3,84.6%,28%);
  box-shadow: 0 0 0 1px hsl(323.3,84.6%,28%);
}

.c1:focus + label {
  color: hsl(323.3,84.6%,28%);
}

.c1[required] + label:after {
  content: "*";
}

.c1[disabled] {
  opacity: 0.3;
}

.c1[disabled] ~ * {
  color: rgba(0,0,0,0.3);
}

.c1::-webkit-input-placeholder {
  color: hsl(0,0%,75%);
}

.c1::-moz-placeholder {
  color: hsl(0,0%,75%);
}

.c1:-ms-input-placeholder {
  color: hsl(0,0%,75%);
}

.c1::placeholder {
  color: hsl(0,0%,75%);
}

<div
  className="c0"
>
  <input
    className="c1"
    id="exampleFullName2"
    readOnly={false}
    required={false}
    tabIndex="0"
    type="text"
  />
  <label
    className="c2"
    htmlFor="exampleFullName2"
  >
    Full name2
  </label>
</div>
`;

exports[`TextField a small TextFieldComponent object should return a small TextFieldComponent object with space mb  1`] = `
.c2 {
  background-color: hsl(0,0%,100%);
  color: inherit;
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  left: 0.5rem;
  padding: 0 0.5rem;
  position: absolute;
  top: -0.5rem;
}

.c0 {
  position: relative;
  background-color: hsl(0,0%,100%);
  padding-bottom: 16px;
  padding-top: 4px;
  width: 100%;
}

.c1 {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  border: 1px solid hsl(0,0%,25%);
  border-radius: 4px;
  padding: 1rem;
  outline: 0;
  width: 100%;
}

.c1:focus {
  border-color: hsl(323.3,84.6%,28%);
  box-shadow: 0 0 0 1px hsl(323.3,84.6%,28%);
}

.c1:focus + label {
  color: hsl(323.3,84.6%,28%);
}

.c1[required] + label:after {
  content: "*";
}

.c1[disabled] {
  opacity: 0.3;
}

.c1[disabled] ~ * {
  color: rgba(0,0,0,0.3);
}

.c1::-webkit-input-placeholder {
  color: hsl(0,0%,75%);
}

.c1::-moz-placeholder {
  color: hsl(0,0%,75%);
}

.c1:-ms-input-placeholder {
  color: hsl(0,0%,75%);
}

.c1::placeholder {
  color: hsl(0,0%,75%);
}

<div
  className="c0"
>
  <input
    className="c1"
    id="exampleFullName2"
    readOnly={false}
    required={false}
    tabIndex="0"
    type="text"
  />
  <label
    className="c2"
    htmlFor="exampleFullName2"
  >
    Full name2
  </label>
</div>
`;

exports[`TextField with assistive text should return a TextField object contain Assistive Text 1`] = `
.c2 {
  background-color: hsl(0,0%,100%);
  color: inherit;
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  left: 0.5rem;
  padding: 0 0.5rem;
  position: absolute;
  top: -0.5rem;
}

.c3 {
  color: hsl(0,0%,50%);
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  padding: 0 1rem;
}

.c0 {
  position: relative;
  background-color: hsl(0,0%,100%);
  padding-bottom: 16px;
  padding-top: 4px;
  width: 100%;
}

.c1 {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  border: 1px solid hsl(0,0%,25%);
  border-radius: 4px;
  padding: 1rem;
  outline: 0;
  width: 100%;
}

.c1:focus {
  border-color: hsl(323.3,84.6%,28%);
  box-shadow: 0 0 0 1px hsl(323.3,84.6%,28%);
}

.c1:focus + label {
  color: hsl(323.3,84.6%,28%);
}

.c1[required] + label:after {
  content: "*";
}

.c1[disabled] {
  opacity: 0.3;
}

.c1[disabled] ~ * {
  color: rgba(0,0,0,0.3);
}

.c1::-webkit-input-placeholder {
  color: hsl(0,0%,75%);
}

.c1::-moz-placeholder {
  color: hsl(0,0%,75%);
}

.c1:-ms-input-placeholder {
  color: hsl(0,0%,75%);
}

.c1::placeholder {
  color: hsl(0,0%,75%);
}

<div
  className="c0"
>
  <input
    className="c1"
    id="exampleFullName"
    readOnly={false}
    required={false}
    tabIndex="0"
    type="text"
  />
  <label
    className="c2"
    htmlFor="exampleFullName"
  >
    Full name
  </label>
  <div
    className="c3"
    id="exampleFullNameHelp"
  >
    Please tell me your name
  </div>
</div>
`;

exports[`TextField with some other props should return a TextField object contain input with those other props  1`] = `
.c2 {
  background-color: hsl(0,0%,100%);
  color: inherit;
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  left: 0.5rem;
  padding: 0 0.5rem;
  position: absolute;
  top: -0.5rem;
}

.c3 {
  color: hsl(0,0%,50%);
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  padding: 0 1rem;
}

.c0 {
  position: relative;
  background-color: hsl(0,0%,100%);
  padding-bottom: 16px;
  padding-top: 4px;
  width: 100%;
}

.c1 {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  border: 1px solid hsl(0,0%,25%);
  border-radius: 4px;
  padding: 1rem;
  outline: 0;
  width: 100%;
}

.c1:focus {
  border-color: hsl(323.3,84.6%,28%);
  box-shadow: 0 0 0 1px hsl(323.3,84.6%,28%);
}

.c1:focus + label {
  color: hsl(323.3,84.6%,28%);
}

.c1[required] + label:after {
  content: "*";
}

.c1[disabled] {
  opacity: 0.3;
}

.c1[disabled] ~ * {
  color: rgba(0,0,0,0.3);
}

.c1::-webkit-input-placeholder {
  color: hsl(0,0%,75%);
}

.c1::-moz-placeholder {
  color: hsl(0,0%,75%);
}

.c1:-ms-input-placeholder {
  color: hsl(0,0%,75%);
}

.c1::placeholder {
  color: hsl(0,0%,75%);
}

<div
  className="c0"
>
  <input
    className="c1"
    id="exampleFullName"
    link="abc"
    readOnly={false}
    required={true}
    tabIndex="0"
    type="text"
  />
  <label
    className="c2"
    htmlFor="exampleFullName"
  >
    Full name
  </label>
  <div
    className="c3"
    id="exampleFullNameHelp"
  >
    *Required
  </div>
</div>
`;

exports[`TextField with validation error should return a TextField object contain Assistive Text with error style 1`] = `
.c2 {
  background-color: hsl(0,0%,100%);
  color: hsl(4.1,89.6%,58.4%);
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  left: 0.5rem;
  padding: 0 0.5rem;
  position: absolute;
  top: -0.5rem;
}

.c3 {
  color: hsl(4.1,89.6%,58.4%);
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  padding: 0 1rem;
}

.c0 {
  position: relative;
  background-color: hsl(0,0%,100%);
  padding-bottom: 16px;
  padding-top: 4px;
  width: 100%;
}

.c1 {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  border: 1px solid hsl(4.1,89.6%,58.4%);
  border-radius: 4px;
  padding: 1rem;
  outline: 0;
  width: 100%;
}

.c1:focus {
  border-color: hsl(323.3,84.6%,28%);
  box-shadow: 0 0 0 1px hsl(323.3,84.6%,28%);
}

.c1:focus + label {
  color: hsl(323.3,84.6%,28%);
}

.c1[required] + label:after {
  content: "*";
}

.c1[disabled] {
  opacity: 0.3;
}

.c1[disabled] ~ * {
  color: rgba(0,0,0,0.3);
}

.c1::-webkit-input-placeholder {
  color: hsl(0,0%,75%);
}

.c1::-moz-placeholder {
  color: hsl(0,0%,75%);
}

.c1:-ms-input-placeholder {
  color: hsl(0,0%,75%);
}

.c1::placeholder {
  color: hsl(0,0%,75%);
}

<div
  className="c0"
>
  <input
    className="c1"
    id="exampleFullName"
    readOnly={false}
    required={false}
    tabIndex="0"
    type="text"
  />
  <label
    className="c2"
    htmlFor="exampleFullName"
  >
    Full name
  </label>
  <div
    className="c3"
    id="exampleFullNameError"
  >
    This is a required field.
  </div>
</div>
`;
