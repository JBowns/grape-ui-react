// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CheckboxField using Theme Font Family should return a CheckboxField object with a custom base font family defined 1`] = `
.c3 {
  color: hsl(4.1,89.6%,58.4%);
  background-color: transparent;
  font-family: Nunito,sans-serif;
  font-size: 0.8rem;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  margin-right: 1rem;
  -webkit-align-items: baseline;
  -webkit-box-align: baseline;
  -ms-flex-align: baseline;
  align-items: baseline;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
  cursor: pointer;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding-bottom: 8px;
  padding-left: 16px;
  padding-right: 16px;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c1 {
  background-color: hsl(0,0%,100%);
  color: inherit;
  font-family: Nunito,sans-serif;
  font-size: 0.8rem;
  font-weight: inherit;
  height: auto;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 0.8;
  position: relative;
  top: auto;
  left: 8px;
  padding-left: 8px;
  padding-right: 8px;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}

.c0 {
  position: relative;
  background-color: transparent;
  color: inherit;
  padding-bottom: 16px;
  padding-top: 4px;
  width: 100%;
}

<div
  className="c0"
>
  <label
    className="c1"
    htmlFor="checkbox"
  >
    Color
  </label>
  <div
    className="c2"
    id=""
  >
    <label
      className="c3"
      disabled={false}
      id="checkbox"
      value={
        Array [
          "red",
        ]
      }
    >
      <input
        checked={true}
        disabled={false}
        id="checkbox"
        name="Color"
        onChange={[Function]}
        style={
          Object {
            "cursor": "pointer",
            "marginRight": "0.5rem",
          }
        }
        type="checkbox"
        value="red"
      >
        This should be Nunito and red
      </input>
      Red
    </label>
    <label
      className="c3"
      disabled={false}
      id="checkbox"
      value={
        Array [
          "red",
        ]
      }
    >
      <input
        checked={false}
        disabled={false}
        id="checkbox"
        name="Color"
        onChange={[Function]}
        style={
          Object {
            "cursor": "pointer",
            "marginRight": "0.5rem",
          }
        }
        type="checkbox"
        value="yellow"
      >
        This should be Nunito and red
      </input>
      Yellow
    </label>
    <label
      className="c3"
      disabled={false}
      id="checkbox"
      value={
        Array [
          "red",
        ]
      }
    >
      <input
        checked={false}
        disabled={false}
        id="checkbox"
        name="Color"
        onChange={[Function]}
        style={
          Object {
            "cursor": "pointer",
            "marginRight": "0.5rem",
          }
        }
        type="checkbox"
        value="green"
      >
        This should be Nunito and red
      </input>
      Green
    </label>
  </div>
</div>
`;

exports[`CheckboxField using Theme Font Family should return a CheckboxField object with a custom font family 1`] = `
.c3 {
  background-color: transparent;
  color: inherit;
  font-family: "DejaVu Sans Mono","Bitstream Vera Sans Mono",Courier;
  font-size: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  margin-right: 1rem;
  -webkit-align-items: baseline;
  -webkit-box-align: baseline;
  -ms-flex-align: baseline;
  align-items: baseline;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
  cursor: pointer;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding-bottom: 8px;
  padding-left: 16px;
  padding-right: 16px;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c1 {
  background-color: hsl(0,0%,100%);
  color: inherit;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.8rem;
  font-weight: inherit;
  height: auto;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 0.8;
  position: relative;
  top: auto;
  left: 8px;
  padding-left: 8px;
  padding-right: 8px;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}

.c0 {
  position: relative;
  background-color: transparent;
  color: inherit;
  padding-bottom: 16px;
  padding-top: 4px;
  width: 100%;
}

<div
  className="c0"
>
  <label
    className="c1"
    htmlFor="checkbox"
  >
    Color
  </label>
  <div
    className="c2"
    id=""
  >
    <label
      className="c3"
      disabled={false}
      id="checkbox"
      value={
        Array [
          "red",
        ]
      }
    >
      <input
        checked={true}
        disabled={false}
        id="checkbox"
        name="Color"
        onChange={[Function]}
        style={
          Object {
            "cursor": "pointer",
            "marginRight": "0.5rem",
          }
        }
        type="checkbox"
        value="red"
      >
        Lorem Ipsum
      </input>
      Red
    </label>
    <label
      className="c3"
      disabled={false}
      id="checkbox"
      value={
        Array [
          "red",
        ]
      }
    >
      <input
        checked={false}
        disabled={false}
        id="checkbox"
        name="Color"
        onChange={[Function]}
        style={
          Object {
            "cursor": "pointer",
            "marginRight": "0.5rem",
          }
        }
        type="checkbox"
        value="yellow"
      >
        Lorem Ipsum
      </input>
      Yellow
    </label>
    <label
      className="c3"
      disabled={false}
      id="checkbox"
      value={
        Array [
          "red",
        ]
      }
    >
      <input
        checked={false}
        disabled={false}
        id="checkbox"
        name="Color"
        onChange={[Function]}
        style={
          Object {
            "cursor": "pointer",
            "marginRight": "0.5rem",
          }
        }
        type="checkbox"
        value="green"
      >
        Lorem Ipsum
      </input>
      Green
    </label>
  </div>
</div>
`;

exports[`CheckboxField using Theme color should return a CheckboxField object with custom color 1`] = `
.c3 {
  color: hsl(313,67.8%,47.5%);
  background-color: transparent;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  margin-right: 1rem;
  -webkit-align-items: baseline;
  -webkit-box-align: baseline;
  -ms-flex-align: baseline;
  align-items: baseline;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
  cursor: pointer;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding-bottom: 8px;
  padding-left: 16px;
  padding-right: 16px;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c1 {
  background-color: hsl(305,33.9%,23.7%);
  color: inherit;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.8rem;
  font-weight: inherit;
  height: auto;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 0.8;
  position: relative;
  top: auto;
  left: 8px;
  padding-left: 8px;
  padding-right: 8px;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}

.c0 {
  position: relative;
  background-color: transparent;
  color: inherit;
  padding-bottom: 16px;
  padding-top: 4px;
  width: 100%;
}

<div
  className="c0"
>
  <label
    className="c1"
    htmlFor="checkbox"
  >
    Color
  </label>
  <div
    className="c2"
    id=""
  >
    <label
      className="c3"
      disabled={false}
      id="checkbox"
      value={
        Array [
          "red",
        ]
      }
    >
      <input
        checked={true}
        disabled={false}
        id="checkbox"
        name="Color"
        onChange={[Function]}
        style={
          Object {
            "cursor": "pointer",
            "marginRight": "0.5rem",
          }
        }
        type="checkbox"
        value="red"
      >
        Lorem Ipsum
      </input>
      Red
    </label>
    <label
      className="c3"
      disabled={false}
      id="checkbox"
      value={
        Array [
          "red",
        ]
      }
    >
      <input
        checked={false}
        disabled={false}
        id="checkbox"
        name="Color"
        onChange={[Function]}
        style={
          Object {
            "cursor": "pointer",
            "marginRight": "0.5rem",
          }
        }
        type="checkbox"
        value="yellow"
      >
        Lorem Ipsum
      </input>
      Yellow
    </label>
    <label
      className="c3"
      disabled={false}
      id="checkbox"
      value={
        Array [
          "red",
        ]
      }
    >
      <input
        checked={false}
        disabled={false}
        id="checkbox"
        name="Color"
        onChange={[Function]}
        style={
          Object {
            "cursor": "pointer",
            "marginRight": "0.5rem",
          }
        }
        type="checkbox"
        value="green"
      >
        Lorem Ipsum
      </input>
      Green
    </label>
  </div>
</div>
`;
