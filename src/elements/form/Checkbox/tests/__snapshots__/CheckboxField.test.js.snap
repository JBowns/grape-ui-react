// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CheckboxFieldComponent Component base should return a CheckboxFieldComponent that contains CheckboxComponent object 1`] = `
.c2 {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-right: 1rem;
  -webkit-align-items: baseline;
  -webkit-box-align: baseline;
  -ms-flex-align: baseline;
  align-items: baseline;
}

.c1 {
  background-color: hsl(0,0%,100%);
  color: inherit;
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  left: 0.5rem;
  padding: 0 0.5rem;
  position: relative;
}

.c0 {
  position: relative;
  background-color: inherit;
  width: 100%;
}

<div
  className="c0"
>
  <label
    className="c1"
    htmlFor="exampleColor"
  >
    Color
    <div
      id=""
      style={
        Object {
          "display": "flex",
        }
      }
    >
      <label
        className="c2"
        disabled={false}
        id="exampleColor"
        value={
          Array [
            "red",
          ]
        }
      >
        <input
          checked={true}
          disabled={false}
          id="exampleColor"
          name="Color"
          onChange={[Function]}
          style={
            Object {
              "marginRight": "0.5rem",
            }
          }
          type="checkbox"
          value="red"
        />
        Red
      </label>
      <label
        className="c2"
        disabled={false}
        id="exampleColor"
        value={
          Array [
            "red",
          ]
        }
      >
        <input
          checked={false}
          disabled={false}
          id="exampleColor"
          name="Color"
          onChange={[Function]}
          style={
            Object {
              "marginRight": "0.5rem",
            }
          }
          type="checkbox"
          value="yellow"
        />
        Yellow
      </label>
      <label
        className="c2"
        disabled={false}
        id="exampleColor"
        value={
          Array [
            "red",
          ]
        }
      >
        <input
          checked={false}
          disabled={false}
          id="exampleColor"
          name="Color"
          onChange={[Function]}
          style={
            Object {
              "marginRight": "0.5rem",
            }
          }
          type="checkbox"
          value="green"
        />
        Green
      </label>
    </div>
  </label>
</div>
`;

exports[`CheckboxFieldComponent Component with disabled should return a CheckboxFieldComponent that contains CheckboxComponent object with disabled 1`] = `
.c2 {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-right: 1rem;
  -webkit-align-items: baseline;
  -webkit-box-align: baseline;
  -ms-flex-align: baseline;
  align-items: baseline;
  opacity: 0.6;
}

.c1 {
  background-color: hsl(0,0%,100%);
  color: inherit;
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  left: 0.5rem;
  padding: 0 0.5rem;
  position: relative;
}

.c0 {
  position: relative;
  background-color: inherit;
  width: 100%;
}

<div
  className="c0"
>
  <label
    className="c1"
    htmlFor="exampleColor"
  >
    Color
    <div
      id=""
      style={
        Object {
          "display": "flex",
        }
      }
    >
      <label
        className="c2"
        disabled={true}
        id="exampleColor"
        value={
          Array [
            "red",
          ]
        }
      >
        <input
          checked={true}
          disabled={true}
          id="exampleColor"
          name="Color"
          onChange={[Function]}
          style={
            Object {
              "marginRight": "0.5rem",
            }
          }
          type="checkbox"
          value="red"
        />
        Red
      </label>
      <label
        className="c2"
        disabled={true}
        id="exampleColor"
        value={
          Array [
            "red",
          ]
        }
      >
        <input
          checked={false}
          disabled={true}
          id="exampleColor"
          name="Color"
          onChange={[Function]}
          style={
            Object {
              "marginRight": "0.5rem",
            }
          }
          type="checkbox"
          value="yellow"
        />
        Yellow
      </label>
      <label
        className="c2"
        disabled={true}
        id="exampleColor"
        value={
          Array [
            "red",
          ]
        }
      >
        <input
          checked={false}
          disabled={true}
          id="exampleColor"
          name="Color"
          onChange={[Function]}
          style={
            Object {
              "marginRight": "0.5rem",
            }
          }
          type="checkbox"
          value="green"
        />
        Green
      </label>
    </div>
  </label>
</div>
`;

exports[`CheckboxFieldComponent Component with plaintext should return a CheckboxFieldComponent that contains CheckboxComponent object with plainText 1`] = `
.c2 {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  border: 1px solid hsl(0,0%,25%);
  border-radius: 4px;
  padding: 1rem;
  outline: 0;
  width: 100%;
}

.c2:focus {
  border-color: hsl(323.3,84.6%,28%);
  box-shadow: 0 0 0 1px hsl(323.3,84.6%,28%);
}

.c2:focus + label {
  color: hsl(323.3,84.6%,28%);
}

.c2[required] + label:after {
  content: "*";
}

.c2[disabled] {
  opacity: 0.3;
}

.c2[disabled] ~ * {
  color: rgba(0,0,0,0.3);
}

.c2::-webkit-input-placeholder {
  color: hsl(0,0%,75%);
}

.c2::-moz-placeholder {
  color: hsl(0,0%,75%);
}

.c2:-ms-input-placeholder {
  color: hsl(0,0%,75%);
}

.c2::placeholder {
  color: hsl(0,0%,75%);
}

.c1 {
  background-color: hsl(0,0%,100%);
  color: inherit;
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  left: 0.5rem;
  padding: 0 0.5rem;
  position: relative;
}

.c0 {
  position: relative;
  background-color: inherit;
  width: 100%;
}

<div
  className="c0"
>
  <label
    className="c1"
    htmlFor="exampleColor"
  >
    Color
    <div
      className="c2"
      disabled={false}
      fontSize="inherit"
    >
      
    </div>
  </label>
</div>
`;
