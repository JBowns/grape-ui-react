// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Form Component base should return a Form object 1`] = `
<form
  className=""
/>
`;

exports[`Form Component base should return a Form object and textField with filled formStyle 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c3 {
  color: inherit;
  background-color: hsl(0,0%,100%);
  font-family: inherit;
  font-size: 0.8rem;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 0.8;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  left: 0.5rem;
  padding: 0 0.5rem;
  top: 0;
  height: 0.4rem;
  position: absolute;
}

.c1 {
  position: relative;
  color: inherit;
  background-color: hsl(0,0%,100%);
  padding-top: 4px;
  padding-bottom: 16px;
  width: 100%;
}

.c2 {
  color: inherit;
  background-color: hsl(0,0%,90%);
  font-family: inherit;
  font-size: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  border-bottom: 1px solid hsl(0,0%,25%);
  border-radius: 4px 4px 0 0;
  padding: 1.5rem 1rem 0.5rem;
  outline: 0;
  width: 100%;
}

.c2 + label {
  top: 0.9rem;
  background: transparent;
}

.c2[required] + label:after {
  content: "*";
}

.c2[disabled] {
  opacity: 0.3;
}

.c2[disabled] ~ * {
  color: rgba(0,0,0,0.3);
}

.c2:focus {
  border-bottom: 2px solid hsl(323.3,84.6%,28%);
  margin-bottom: -1px;
}

.c2:focus + label {
  color: hsl(323.3,84.6%,28%);
}

.c2::-webkit-input-placeholder {
  color: hsl(0,0%,75%);
}

.c2::-moz-placeholder {
  color: hsl(0,0%,75%);
}

.c2:-ms-input-placeholder {
  color: hsl(0,0%,75%);
}

.c2::placeholder {
  color: hsl(0,0%,75%);
}

<form
  className="c0"
>
  <div
    className="c1"
  >
    <input
      className="c2"
      id="exampleFullName"
      readOnly={false}
      required={false}
      tabIndex="0"
      type="text"
    />
    <label
      className="c3"
      htmlFor="exampleFullName"
    >
      Full name
    </label>
  </div>
</form>
`;

exports[`Form Component base should return a Form object with 2 filled formStyle with 2 textField and 1 SelectField 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c3 {
  color: inherit;
  background-color: hsl(0,0%,100%);
  font-family: inherit;
  font-size: 0.8rem;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 0.8;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  left: 0.5rem;
  padding: 0 0.5rem;
  top: 0;
  height: 0.4rem;
  position: absolute;
}

.c1 {
  position: relative;
  color: inherit;
  background-color: hsl(0,0%,100%);
  padding-top: 4px;
  padding-bottom: 16px;
  width: 100%;
}

.c4 {
  position: relative;
  color: inherit;
  background-color: transparent;
  padding-top: 4px;
  padding-bottom: 16px;
  width: 100%;
}

.c2 {
  color: inherit;
  background-color: hsl(0,0%,90%);
  font-family: inherit;
  font-size: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  border-bottom: 1px solid hsl(0,0%,25%);
  border-radius: 4px 4px 0 0;
  padding: 1.5rem 1rem 0.5rem;
  outline: 0;
  width: 100%;
}

.c2 + label {
  top: 0.9rem;
  background: transparent;
}

.c2[required] + label:after {
  content: "*";
}

.c2[disabled] {
  opacity: 0.3;
}

.c2[disabled] ~ * {
  color: rgba(0,0,0,0.3);
}

.c2:focus {
  border-bottom: 2px solid hsl(323.3,84.6%,28%);
  margin-bottom: -1px;
}

.c2:focus + label {
  color: hsl(323.3,84.6%,28%);
}

.c2::-webkit-input-placeholder {
  color: hsl(0,0%,75%);
}

.c2::-moz-placeholder {
  color: hsl(0,0%,75%);
}

.c2:-ms-input-placeholder {
  color: hsl(0,0%,75%);
}

.c2::placeholder {
  color: hsl(0,0%,75%);
}

.c5 {
  color: inherit;
  background-color: hsl(0,0%,90%);
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  border-bottom: 1px solid hsl(0,0%,25%);
  border-radius: 2px 2px 0 0;
  padding: 1.5rem 1rem 0.5rem;
  outline: 0;
  width: 100%;
}

.c5 + label {
  top: 0.9rem;
  background: transparent;
}

.c5[required] + label:after {
  content: "*";
}

.c5[disabled] {
  opacity: 0.3;
}

.c5[disabled] ~ * {
  color: rgba(0,0,0,0.3);
}

.c5:focus {
  border-bottom: 2px solid hsl(323.3,84.6%,28%);
  margin-bottom: -1px;
}

.c5:focus + label {
  color: hsl(323.3,84.6%,28%);
}

.c5::-webkit-input-placeholder {
  color: hsl(0,0%,75%);
}

.c5::-moz-placeholder {
  color: hsl(0,0%,75%);
}

.c5:-ms-input-placeholder {
  color: hsl(0,0%,75%);
}

.c5::placeholder {
  color: hsl(0,0%,75%);
}

.c5 .grape-ui-select__control {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c5 .grape-ui-select__indicator {
  padding: 0;
}

.c5 .grape-ui-select__indicator-separator {
  display: none;
}

.c5 .grape-ui-select__value-container {
  padding: 0;
}

.c5 .grape-ui-select__menu {
  position: absolute;
  left: 0;
  margin: 0;
  padding: 0.5rem 0;
  z-index: 1030;
  box-shadow: 0 8px 17px 2px rgba(0,0,0,0.14),0 3px 14px 2px rgba(0,0,0,0.12),0 5px 5px -3px rgba(0,0,0,0.2);
}

.c5 .grape-ui-select__option {
  padding: 0.5rem 1rem;
}

.c5 .grape-ui-select__option--is-focused {
  background: hsl(207,90%,54%);
  color: hsl(0,0%,98%);
}

.c5 .grape-ui-select__option--is-selected {
  background: hsl(186.8,100%,41.6%);
  color: hsl(0,0%,98%);
}

.c5 .grape-ui-select__placeholder {
  color: hsl(0,0%,75%);
}

.c5 .grape-ui-select__multi-value {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-right: 0.25rem;
  padding: 0.25rem;
  border-radius: 4px;
  background-color: hsl(0,0%,90%);
  font-size: 80%;
}

.c5 .grape-ui-select__multi-value__label {
  padding: 0 0.25rem;
}

.c5 .grape-ui-select__multi-value__remove {
  cursor: pointer;
}

.c5 .grape-ui-select__multi-value__remove:hover path {
  fill: hsl(207,90%,54%);
}

<form
  className="c0"
>
  <div
    className="c1"
  >
    <input
      className="c2"
      id="exampleFullName"
      readOnly={false}
      required={false}
      tabIndex="0"
      type="text"
    />
    <label
      className="c3"
      htmlFor="exampleFullName"
    >
      Full name
    </label>
  </div>
  <div
    className="c1"
  >
    <input
      className="c2"
      id="address"
      readOnly={false}
      required={false}
      tabIndex="0"
      type="text"
    />
    <label
      className="c3"
      htmlFor="address"
    >
      Address
    </label>
  </div>
  <div
    className="c4"
  >
    <div
      className="css-10nd86i c5"
      id="exampleColor"
      onKeyDown={[Function]}
    >
      <div
        className="css-0 grape-ui-select__control"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <div
          className="css-1hwfws3 grape-ui-select__value-container grape-ui-select__value-container--has-value"
        >
          <div
            className="css-0 grape-ui-select__single-value"
          >
            Yellow
          </div>
          <div
            className="css-0"
          >
            <div
              className="grape-ui-select__input"
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-autocomplete="list"
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                disabled={false}
                id="react-select-2-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "boxSizing": "content-box",
                    "color": "inherit",
                    "fontSize": "inherit",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "1px",
                  }
                }
                tabIndex="0"
                type="text"
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </div>
        </div>
        <div
          className="css-1wy0on6 grape-ui-select__indicators"
        >
          <span
            className="css-d8oujb grape-ui-select__indicator-separator"
          />
          <div
            aria-hidden="true"
            className="css-1ep9fjw grape-ui-select__indicator grape-ui-select__dropdown-indicator"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="css-19bqh2r"
              focusable="false"
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <path
                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
    <label
      className="c3"
      htmlFor="exampleColor"
    >
      Color
    </label>
  </div>
</form>
`;

exports[`Form Component base should return a Form object with div that do not get formStyle="filled" 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

<form
  className="c0"
>
  <div
    id="1"
  />
</form>
`;

exports[`Form Component base should return a Form object with filled formStyle and textField with outlined 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c3 {
  color: inherit;
  background-color: hsl(0,0%,100%);
  font-family: inherit;
  font-size: 0.8rem;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 0.8;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  left: 0.5rem;
  padding: 0 0.5rem;
  top: 0;
  height: 0.4rem;
  position: absolute;
}

.c1 {
  position: relative;
  color: inherit;
  background-color: hsl(0,0%,100%);
  padding-top: 4px;
  padding-bottom: 16px;
  width: 100%;
}

.c2 {
  color: inherit;
  background-color: transparent;
  font-family: inherit;
  font-size: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  border: 1px solid hsl(0,0%,25%);
  border-radius: 4px;
  padding: 1rem;
  outline: 0;
  width: 100%;
}

.c2[required] + label:after {
  content: "*";
}

.c2[disabled] {
  opacity: 0.3;
}

.c2[disabled] ~ * {
  color: rgba(0,0,0,0.3);
}

.c2:focus {
  border-color: hsl(323.3,84.6%,28%);
  box-shadow: 0 0 0 1px hsl(323.3,84.6%,28%);
}

.c2:focus + label {
  color: hsl(323.3,84.6%,28%);
}

.c2::-webkit-input-placeholder {
  color: hsl(0,0%,75%);
}

.c2::-moz-placeholder {
  color: hsl(0,0%,75%);
}

.c2:-ms-input-placeholder {
  color: hsl(0,0%,75%);
}

.c2::placeholder {
  color: hsl(0,0%,75%);
}

<form
  className="c0"
>
  <div
    className="c1"
  >
    <input
      className="c2"
      id="exampleFullName"
      readOnly={false}
      required={false}
      tabIndex="0"
      type="text"
    />
    <label
      className="c3"
      htmlFor="exampleFullName"
    >
      Full name
    </label>
  </div>
</form>
`;

exports[`Form Component base should return a Form object with flex direction column 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

<form
  className="c0"
  flexDirection="column"
/>
`;
