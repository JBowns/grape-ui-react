// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SelectField Component base should return a SelectField that contains ControlLabel object 1`] = `"<label class=\\"sc-gzVnrw dIDPmQ\\" for=\\"exampleColor\\">Color</label>"`;

exports[`SelectField Component base should return a SelectField that contains SelectFieldComponent object 1`] = `"<div class=\\"css-10nd86i sc-bwzfXH gYbWzK\\" id=\\"exampleColor\\"><div class=\\"css-1aya2g8\\"><div class=\\"css-1rtrksz\\"><div class=\\"css-va7pk8\\">Yellow</div><div class=\\"css-rsyb7x\\"><div class=\\"\\" style=\\"display: inline-block;\\"><input autocapitalize=\\"none\\" autocomplete=\\"off\\" autocorrect=\\"off\\" id=\\"react-select-2-input\\" spellcheck=\\"false\\" tabindex=\\"0\\" type=\\"text\\" aria-autocomplete=\\"list\\" style=\\"box-sizing: content-box; width: 2px; border: 0px; font-size: inherit; opacity: 1; outline: 0; padding: 0px;\\" value=\\"\\"><div style=\\"position: absolute; top: 0px; left: 0px; visibility: hidden; height: 0px; overflow: scroll; white-space: pre; font-size: inherit; font-family: -webkit-small-control; letter-spacing: normal; text-transform: none;\\"></div></div></div></div><div class=\\"css-1wy0on6\\"><span class=\\"css-d8oujb\\"></span><div aria-hidden=\\"true\\" class=\\"css-1ep9fjw\\"><svg height=\\"20\\" width=\\"20\\" viewBox=\\"0 0 20 20\\" aria-hidden=\\"true\\" focusable=\\"false\\" class=\\"css-19bqh2r\\"><path d=\\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\\"></path></svg></div></div></div></div>"`;

exports[`SelectField Component with ControlLabel with * should return a SelectField  with ControlLabel with * 1`] = `"<label class=\\"sc-dxgOiQ gVAwxi\\" for=\\"exampleColor\\">Color*</label>"`;

exports[`SelectField Component with assistive text should return a SelectField with assistive text 1`] = `"<div class=\\"sc-VigVT kZczcx\\" id=\\"exampleColorHelp\\">Please tell me your color</div>"`;

exports[`SelectField Component with assistive text should return a SelectField with error text 1`] = `"<div class=\\"sc-chPdSV dwBNWU\\" id=\\"exampleColorError\\">This is a required field.</div>"`;

exports[`SelectField Component with plainText or disabled should return a SelectField with disabled input contains a props "disabled": true 1`] = `
Object {
  "aria-autocomplete": "list",
  "aria-label": undefined,
  "aria-labelledby": undefined,
  "autoCapitalize": "none",
  "autoComplete": "off",
  "autoCorrect": "off",
  "className": undefined,
  "disabled": true,
  "id": "react-select-12-input",
  "onBlur": [Function],
  "onChange": [Function],
  "onFocus": [Function],
  "spellCheck": "false",
  "style": Object {
    "background": 0,
    "border": 0,
    "boxSizing": "content-box",
    "color": "inherit",
    "fontSize": "inherit",
    "opacity": 1,
    "outline": 0,
    "padding": 0,
    "width": "2px",
  },
  "tabIndex": "0",
  "type": "text",
  "value": "",
}
`;

exports[`SelectField Component with plainText or disabled should return a SelectField with plainText with <div> Yellow </div> rendered 1`] = `
.c1 {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  border: 0;
  display: block;
  outline: 0;
  padding: 1rem;
}

.c0 {
  bg-color: white.light;
  padding-bottom: 16px;
  padding-top: 4px;
  position: relative;
  background-color: hsl(0,0%,100%);
  width: 100%;
}

.c2 {
  background-color: hsl(0,0%,100%);
  left: 0.5rem;
  padding: 0 0.5rem;
  position: absolute;
  top: -0.5rem;
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}

<div
  className="c0"
>
  <div
    className="c1"
    disabled={false}
    id="exampleColor"
    value={
      Object {
        "color": "#FFC400",
        "label": "Yellow",
        "value": "yellow",
      }
    }
  >
    Yellow
  </div>
  <label
    className="c2"
    htmlFor="exampleColor"
  >
    Color
  </label>
</div>
`;

exports[`SelectField Component with react-select predefined props should return a SelectField with isClearable and placeholder contains a element svg that draw a x 1`] = `
Object {
  "aria-hidden": "true",
  "children": <path
    d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
  />,
  "className": "css-19bqh2r",
  "focusable": "false",
  "height": 20,
  "viewBox": "0 0 20 20",
  "width": 20,
}
`;

exports[`SelectField Component with space should return a SelectField with space with  margin: 32px;  padding: 32px; on c0 1`] = `
.c0 {
  bg-color: white.light;
  margin: 32px;
  padding: 32px;
  padding-bottom: 16px;
  padding-top: 4px;
  position: relative;
  background-color: hsl(0,0%,100%);
  width: 100%;
}

.c1 {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  border: 1px solid hsl(0,0%,25%);
  border-radius: 4px;
  padding: 1rem;
  outline: 0;
  width: 100%;
}

.c1:focus {
  border-color: hsl(323.3,84.6%,28%);
  box-shadow: 0 0 0 1px hsl(323.3,84.6%,28%);
}

.c1:focus + label {
  color: hsl(323.3,84.6%,28%);
}

.c1[required] + label:after {
  content: "*";
}

.c1[disabled] {
  opacity: 0.3;
}

.c1[disabled] ~ * {
  color: rgba(0,0,0,0.3);
}

.c2 {
  background-color: hsl(0,0%,100%);
  left: 0.5rem;
  padding: 0 0.5rem;
  position: absolute;
  top: -0.5rem;
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}

.c3 {
  padding: 0 1rem;
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}

<div
  className="c0"
>
  <div
    className="css-10nd86i c1"
    id="exampleColor"
    onKeyDown={[Function]}
  >
    <div
      className="css-1aya2g8"
      onMouseDown={[Function]}
      onTouchEnd={[Function]}
    >
      <div
        className="css-1rtrksz"
      >
        <div
          className="css-va7pk8"
        >
          Yellow
        </div>
        <div
          className="css-rsyb7x"
        >
          <div
            className=""
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <input
              aria-autocomplete="list"
              aria-label={undefined}
              aria-labelledby={undefined}
              autoCapitalize="none"
              autoComplete="off"
              autoCorrect="off"
              className={undefined}
              disabled={false}
              id="react-select-11-input"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              spellCheck="false"
              style={
                Object {
                  "background": 0,
                  "border": 0,
                  "boxSizing": "content-box",
                  "color": "inherit",
                  "fontSize": "inherit",
                  "opacity": 1,
                  "outline": 0,
                  "padding": 0,
                  "width": "1px",
                }
              }
              tabIndex="0"
              type="text"
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </div>
      </div>
      <div
        className="css-1wy0on6"
      >
        <span
          className="css-d8oujb"
        />
        <div
          aria-hidden="true"
          className="css-1ep9fjw"
          onMouseDown={[Function]}
          onTouchEnd={[Function]}
        >
          <svg
            aria-hidden="true"
            className="css-19bqh2r"
            focusable="false"
            height={20}
            viewBox="0 0 20 20"
            width={20}
          >
            <path
              d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
            />
          </svg>
        </div>
      </div>
    </div>
  </div>
  <label
    className="c2"
    htmlFor="exampleColor"
  >
    Color
  </label>
  <div
    className="c3"
    id="exampleColorHelp"
  >
    Please tell me your color
  </div>
</div>
`;

exports[`SelectField Component with style should return a SelectField with background-color: hsl(4.1,89.6%,58.4%) in c0 and c2  1`] = `
.c0 {
  bg-color: red;
  padding-bottom: 16px;
  padding-top: 4px;
  position: relative;
  background-color: hsl(4.1,89.6%,58.4%);
  width: 100%;
}

.c1 {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  border: 1px solid hsl(0,0%,25%);
  border-radius: 4px;
  padding: 1rem;
  outline: 0;
  width: 100%;
}

.c1:focus {
  border-color: hsl(323.3,84.6%,28%);
  box-shadow: 0 0 0 1px hsl(323.3,84.6%,28%);
}

.c1:focus + label {
  color: hsl(323.3,84.6%,28%);
}

.c1[required] + label:after {
  content: "*";
}

.c1[disabled] {
  opacity: 0.3;
}

.c1[disabled] ~ * {
  color: rgba(0,0,0,0.3);
}

.c2 {
  background-color: hsl(4.1,89.6%,58.4%);
  left: 0.5rem;
  padding: 0 0.5rem;
  position: absolute;
  top: -0.5rem;
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}

.c3 {
  padding: 0 1rem;
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}

<div
  className="c0"
>
  <div
    className="css-10nd86i c1"
    id="exampleColor"
    onKeyDown={[Function]}
  >
    <div
      className="css-1aya2g8"
      onMouseDown={[Function]}
      onTouchEnd={[Function]}
    >
      <div
        className="css-1rtrksz"
      >
        <div
          className="css-va7pk8"
        >
          Yellow
        </div>
        <div
          className="css-rsyb7x"
        >
          <div
            className=""
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <input
              aria-autocomplete="list"
              aria-label={undefined}
              aria-labelledby={undefined}
              autoCapitalize="none"
              autoComplete="off"
              autoCorrect="off"
              className={undefined}
              disabled={false}
              id="react-select-9-input"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              spellCheck="false"
              style={
                Object {
                  "background": 0,
                  "border": 0,
                  "boxSizing": "content-box",
                  "color": "inherit",
                  "fontSize": "inherit",
                  "opacity": 1,
                  "outline": 0,
                  "padding": 0,
                  "width": "1px",
                }
              }
              tabIndex="0"
              type="text"
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </div>
      </div>
      <div
        className="css-1wy0on6"
      >
        <span
          className="css-d8oujb"
        />
        <div
          aria-hidden="true"
          className="css-1ep9fjw"
          onMouseDown={[Function]}
          onTouchEnd={[Function]}
        >
          <svg
            aria-hidden="true"
            className="css-19bqh2r"
            focusable="false"
            height={20}
            viewBox="0 0 20 20"
            width={20}
          >
            <path
              d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
            />
          </svg>
        </div>
      </div>
    </div>
  </div>
  <label
    className="c2"
    htmlFor="exampleColor"
  >
    Color
  </label>
  <div
    className="c3"
    id="exampleColorHelp"
  >
    Please tell me your color
  </div>
</div>
`;

exports[`SelectField Component with style should return a SelectField with orange borderColor with border: 1px solid orange in c1; 1`] = `
.c0 {
  bg-color: white.light;
  padding-bottom: 16px;
  padding-top: 4px;
  position: relative;
  background-color: hsl(0,0%,100%);
  width: 100%;
}

.c1 {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  border: 1px solid orange;
  border-radius: 4px;
  padding: 1rem;
  outline: 0;
  width: 100%;
}

.c1:focus {
  border-color: hsl(323.3,84.6%,28%);
  box-shadow: 0 0 0 1px hsl(323.3,84.6%,28%);
}

.c1:focus + label {
  color: hsl(323.3,84.6%,28%);
}

.c1[required] + label:after {
  content: "*";
}

.c1[disabled] {
  opacity: 0.3;
}

.c1[disabled] ~ * {
  color: rgba(0,0,0,0.3);
}

.c2 {
  background-color: hsl(0,0%,100%);
  left: 0.5rem;
  padding: 0 0.5rem;
  position: absolute;
  top: -0.5rem;
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}

.c3 {
  padding: 0 1rem;
  font-family: inherit;
  font-size: 0.8rem;
  font-weight: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: 1.5;
  color: inherit;
  text-align: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}

<div
  className="c0"
>
  <div
    className="css-10nd86i c1"
    id="exampleColor"
    onKeyDown={[Function]}
  >
    <div
      className="css-1aya2g8"
      onMouseDown={[Function]}
      onTouchEnd={[Function]}
    >
      <div
        className="css-1rtrksz"
      >
        <div
          className="css-va7pk8"
        >
          Yellow
        </div>
        <div
          className="css-rsyb7x"
        >
          <div
            className=""
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <input
              aria-autocomplete="list"
              aria-label={undefined}
              aria-labelledby={undefined}
              autoCapitalize="none"
              autoComplete="off"
              autoCorrect="off"
              className={undefined}
              disabled={false}
              id="react-select-10-input"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              spellCheck="false"
              style={
                Object {
                  "background": 0,
                  "border": 0,
                  "boxSizing": "content-box",
                  "color": "inherit",
                  "fontSize": "inherit",
                  "opacity": 1,
                  "outline": 0,
                  "padding": 0,
                  "width": "1px",
                }
              }
              tabIndex="0"
              type="text"
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </div>
      </div>
      <div
        className="css-1wy0on6"
      >
        <span
          className="css-d8oujb"
        />
        <div
          aria-hidden="true"
          className="css-1ep9fjw"
          onMouseDown={[Function]}
          onTouchEnd={[Function]}
        >
          <svg
            aria-hidden="true"
            className="css-19bqh2r"
            focusable="false"
            height={20}
            viewBox="0 0 20 20"
            width={20}
          >
            <path
              d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
            />
          </svg>
        </div>
      </div>
    </div>
  </div>
  <label
    className="c2"
    htmlFor="exampleColor"
  >
    Color
  </label>
  <div
    className="c3"
    id="exampleColorHelp"
  >
    Please tell me your color
  </div>
</div>
`;

exports[`SelectField Component with style should return a SelectFieldComponent with props where lg={true} 1`] = `
Object {
  "activeColor": "brandPrimary",
  "borderColor": "hsl(0, 0%, 25%)",
  "borderRadius": "4px",
  "color": "inherit",
  "fontFamily": "inherit",
  "fontWeight": "inherit",
  "id": "exampleColor",
  "isDisabled": false,
  "kerning": "inherit",
  "lg": true,
  "multiple": false,
  "options": Array [
    Object {
      "color": "#FF5630",
      "label": "Red",
      "value": "red",
    },
    Object {
      "color": "#FFC400",
      "label": "Yellow",
      "value": "yellow",
    },
    Object {
      "color": "#36B37E",
      "label": "Green",
      "value": "green",
    },
  ],
  "padding": "1rem",
  "sm": false,
  "textAlign": "inherit",
  "textDecoration": "inherit",
  "validationError": "",
  "value": Object {
    "color": "#FFC400",
    "label": "Yellow",
    "value": "yellow",
  },
}
`;

exports[`SelectField Component with style should return a SelectFieldComponent with props where sm={true} 1`] = `
Object {
  "activeColor": "brandPrimary",
  "borderColor": "hsl(0, 0%, 25%)",
  "borderRadius": "4px",
  "color": "inherit",
  "fontFamily": "inherit",
  "fontWeight": "inherit",
  "id": "exampleColor",
  "isDisabled": false,
  "kerning": "inherit",
  "lg": false,
  "multiple": false,
  "options": Array [
    Object {
      "color": "#FF5630",
      "label": "Red",
      "value": "red",
    },
    Object {
      "color": "#FFC400",
      "label": "Yellow",
      "value": "yellow",
    },
    Object {
      "color": "#36B37E",
      "label": "Green",
      "value": "green",
    },
  ],
  "padding": "1rem",
  "sm": true,
  "textAlign": "inherit",
  "textDecoration": "inherit",
  "validationError": "",
  "value": Object {
    "color": "#FFC400",
    "label": "Yellow",
    "value": "yellow",
  },
}
`;
