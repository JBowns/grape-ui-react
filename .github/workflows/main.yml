on: [push]

jobs:
  greet_log_job:
    runs-on: ubuntu-latest
    name: Log Main Event
    steps:
    - name: Log Step
      id: greet-log-step
      uses: napagroup/grape-ui-react/.github/actions/log-github@devops/41
      with:
        who-to-greet: 'User'
    - name: Time of log
      run: echo "The time was ${{ steps.greet.outputs.time }}"
  prod_build_job:
    runs-on: ubuntu-latest
    name: Build packages for prod repo
    env:
      SOURCE_REPO: napagroup/grape-ui-react
      SOURCE_REPO_PATH: grape-ui-react-repo
      MARKETING_REPO: napagroup/grape-ui-marketing
      MARKETING_REPO_PATH: grape-ui-marketing
    steps:
    - name: Setup Node.js environment
      uses: actions/setup-node@v1
      with:
        node-version: 12
    - name: Confirm node env
      run: |
        node -v
        npm -v
        pwd && ls -hil
    - name: Checkout grape-ui-react repo
      uses: actions/checkout@v2
      with:
        repository: ${{ env.SOURCE_REPO }}
        path: ${{ env.SOURCE_REPO_PATH }}
    - name: Confirm source checkout
      run: |
        cd ${{ env.SOURCE_REPO_PATH }}
        pwd && ls -hil
    - name: Install and Build repo
      run: |
        cd ${{ env.SOURCE_REPO_PATH }}
        npm install
        npm run build:styleguide
        pwd && ls -hil
    - name: Checkout grape-ui-marketing repo
      uses: actions/checkout@v2
      with:
        repository: ${{ env.MARKETING_REPO }}
        path: ${{ env.MARKETING_REPO_PATH }}
    - name: Confirm grape-ui-marketing checkout
      run: |
        cd ${{ env.MARKETING_REPO_PATH }}
        pwd && ls -hil
    - name: Install and Build repo
      run: |
        cd ${{ env.MARKETING_REPO_PATH }}
        npm install
        npm run build
        pwd && ls -hil
    - name: Copy styleguide contents over to grape-ui-market/public/docs
      run: |
        pwd && ls -hil
        mkdir -p ${{ env.MARKETING_REPO_PATH }}/public/docs/build
        cp -r ${{ env.SOURCE_REPO_PATH }}/styleguide/build ${{ env.MARKETING_REPO_PATH }}/public/docs
        cp -r ${{ env.SOURCE_REPO_PATH }}/styleguide/static ${{ env.MARKETING_REPO_PATH }}/public/docs
        cp ${{ env.SOURCE_REPO_PATH }}/styleguide/index.html ${{ env.MARKETING_REPO_PATH }}/public/docs
        echo ${{ env.MARKETING_REPO_PATH }}/public/docs
        ls -hil ${{ env.MARKETING_REPO_PATH }}/public/docs
        echo ${{ env.MARKETING_REPO_PATH }}/public/build
        ls -hil ${{ env.MARKETING_REPO_PATH }}/public/docs/build
        echo ${{ env.MARKETING_REPO_PATH }}/public/static
        ls -hil ${{ env.MARKETING_REPO_PATH }}/public/docs/static
    - name: Perform git add & commit
      uses: EndBug/add-and-commit@v4 # You can change this to use a specific version
      with:
        # The arguments for the `git add` command (see the paragraph below for more info)
        # Default: '.'
        add: '.'
    
        # The name of the user that will be displayed as the author of the commit
        # Default: author of the commit that triggered the run
        author_name: John Shin
    
        # The email of the user that will be displayed as the author of the commit
        # Default: author of the commit that triggered the run
        author_email: jshin@napa.com
    
        # The local path to the directory where your repository is located. You should use actions/checkout first to set it up
        # Default: '.'
        cwd: ${{ env.MARKETING_REPO_PATH }}
    
        # Whether to use the --force option on `git add`, in order to bypass eventual gitignores
        # Default: false
        force: true
    
        # The message for the commit
        # Default: 'Commit from GitHub Actions'
        message: 'Deploy /public'
    
      env:
        # This is necessary in order to push a commit to the repo
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Leave this line unchanged